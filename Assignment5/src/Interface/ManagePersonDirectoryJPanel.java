/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Person;
import Business.PersonDirectory;
import Business.AccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kavyaprakash
 */
public class ManagePersonDirectoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePersonDirectoryJPanel
     */
    JPanel userProcessContainer;
    PersonDirectory personDirectory;
    AccountDirectory userAccountDirectory;
    
    ManagePersonDirectoryJPanel(JPanel userProcessContainer, PersonDirectory personDirectory,AccountDirectory userAccountDirectory ) {
        initComponents(); //To change body of generated methods, choose Tools | Templates.
        this.userProcessContainer = userProcessContainer;
        this.personDirectory = personDirectory;
        this.userAccountDirectory = userAccountDirectory;

        populatePersonTable();

    }

    public void populatePersonTable() {

        DefaultTableModel dtm = (DefaultTableModel) tblPersons.getModel();
        dtm.setRowCount(0);

        for (Person p : personDirectory.getPersonList()) {
            Object row[] = new Object[3];
            row[0] = p;

            dtm.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersons = new javax.swing.JTable();
        Persons = new javax.swing.JLabel();
        btnFindPerson = new javax.swing.JButton();
        btnAddPerson = new javax.swing.JButton();
        btnUpdatePerson = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnDeletePerson = new javax.swing.JButton();

        tblPersons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPersons);
        if (tblPersons.getColumnModel().getColumnCount() > 0) {
            tblPersons.getColumnModel().getColumn(0).setResizable(false);
        }

        Persons.setText("Persons:");

        btnFindPerson.setText("Find Person");
        btnFindPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindPersonActionPerformed(evt);
            }
        });

        btnAddPerson.setText("Add New Person");
        btnAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonActionPerformed(evt);
            }
        });

        btnUpdatePerson.setText("Update Person");
        btnUpdatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePersonActionPerformed(evt);
            }
        });

        jLabel1.setText("MANAGE PERSON DIRECTORY");

        btnDeletePerson.setText("Delete Person");
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(Persons))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddPerson)
                            .addComponent(btnUpdatePerson)
                            .addComponent(btnFindPerson)
                            .addComponent(btnDeletePerson))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(Persons)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnFindPerson)
                        .addGap(31, 31, 31)
                        .addComponent(btnAddPerson)
                        .addGap(37, 37, 37)
                        .addComponent(btnUpdatePerson)
                        .addGap(27, 27, 27)
                        .addComponent(btnDeletePerson)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindPersonActionPerformed
        // TODO add your handling code here:
        String inputFindPerson = JOptionPane.showInputDialog("Enter the lastName of the person");
        for (Person p : personDirectory.getPersonList()) {
            if (p.getLastName().equalsIgnoreCase(inputFindPerson)) {
                JOptionPane.showMessageDialog(null, "Person found!");
                Person personFound = p;
                FindPersonJPanel findPersonJPanel = new FindPersonJPanel(userProcessContainer, personFound,userAccountDirectory);
                userProcessContainer.add("FindPersonJPanel", findPersonJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }
        JOptionPane.showMessageDialog(null,"Person not found!");
    }//GEN-LAST:event_btnFindPersonActionPerformed

    private void btnAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonActionPerformed
        // TODO add your handling code here:
        NewPersonJPanel newPersonJPanel = new NewPersonJPanel(userProcessContainer, personDirectory, this);
        userProcessContainer.add("NewPersonJPanel", newPersonJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddPersonActionPerformed

    private void btnUpdatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePersonActionPerformed
        // TODO add your handling code here:
        
        if (tblPersons.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        Person personSelected = (Person) tblPersons.getValueAt(tblPersons.getSelectedRow(), 0);
        UpdatePersonJPanel updatePersonJPanel = new UpdatePersonJPanel(userProcessContainer, personDirectory, personSelected, this);
        userProcessContainer.add("UpdatePersonJPanel", updatePersonJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        
    }//GEN-LAST:event_btnUpdatePersonActionPerformed

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed
        // TODO add your handling code here:
        Person personSelected = (Person) tblPersons.getValueAt(tblPersons.getSelectedRow(), 0);
        personDirectory.getPersonList().remove(personSelected);
        JOptionPane.showMessageDialog(null, "Person deleted successfully");
        populatePersonTable();
    }//GEN-LAST:event_btnDeletePersonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Persons;
    private javax.swing.JButton btnAddPerson;
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnFindPerson;
    private javax.swing.JButton btnUpdatePerson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPersons;
    // End of variables declaration//GEN-END:variables
}
