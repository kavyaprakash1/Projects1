/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AdminRole;

import Business.Business;
import Business.EmployeeDirectory;
import Business.Market;
import Business.MarketOffer;
import Business.MarketOfferCatalog;
import Business.Market.MarketType;
import Business.Order;
import Business.OrderItem;
import Business.Person;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kavyaprakash
 */
public class ReviewSalesPersonPerfJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReviewSalesPersonPerfJPanel
     */
    JPanel userProcessContainer;
    Business business;

    ReviewSalesPersonPerfJPanel(JPanel userProcessContainer, Business business) {
        initComponents(); //To change body of generated methods, choose Tools | Templates.
        this.business = business;
        initSalesPComboBox();

    }

    public void initSalesPComboBox() {
        comboBoxMarket.removeAllItems();
        for (Market.MarketType mt : Market.MarketType.values()) {
            comboBoxMarket.addItem(mt);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnTopSalesPMarket = new javax.swing.JButton();
        btnSalesPersonAboveT = new javax.swing.JButton();
        btnSalesPersonBelowT = new javax.swing.JButton();
        comboBoxMarket = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSalesPersons = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        jLabel1.setText("Review Sales Pesons Performance");

        btnTopSalesPMarket.setText("Top sales persons by market");
        btnTopSalesPMarket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopSalesPMarketActionPerformed(evt);
            }
        });

        btnSalesPersonAboveT.setText("Sales Persons above target");
        btnSalesPersonAboveT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesPersonAboveTActionPerformed(evt);
            }
        });

        btnSalesPersonBelowT.setText("Sales Persons below target");
        btnSalesPersonBelowT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesPersonBelowTActionPerformed(evt);
            }
        });

        tblSalesPersons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Commision", "Revenue "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSalesPersons);
        if (tblSalesPersons.getColumnModel().getColumnCount() > 0) {
            tblSalesPersons.getColumnModel().getColumn(0).setResizable(false);
            tblSalesPersons.getColumnModel().getColumn(1).setResizable(false);
            tblSalesPersons.getColumnModel().getColumn(2).setResizable(false);
            tblSalesPersons.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton4.setText("<<BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 628, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(191, 191, 191))
            .addGroup(layout.createSequentialGroup()
                .addGap(427, 427, 427)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnTopSalesPMarket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalesPersonBelowT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalesPersonAboveT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxMarket, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton4))
                .addGap(82, 82, 82)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTopSalesPMarket, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxMarket, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalesPersonAboveT, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalesPersonBelowT, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTopSalesPMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopSalesPMarketActionPerformed
        // TODO add your handling code here:
        double revenuePerOrderOfP = 0;

        ArrayList<Double> revenueOfPerson = new ArrayList<Double>();
        MarketType selectedMarket = (MarketType) comboBoxMarket.getSelectedItem();

        DefaultTableModel dtm = (DefaultTableModel) tblSalesPersons.getModel();
        dtm.setRowCount(0);
        HashMap<String, Double> personRevenue = new HashMap<>();
        for (Person p : business.getEmployeeDirectory().getPersonList()) {
            revenuePerOrderOfP = 0;
            for (Order o : p.getOrderCatalog()) {
                System.out.println("order" + o.getOrderItemList());
                for (OrderItem oi : o.getOrderItemList()) {
                    System.out.println("o item" + oi);
                    if ((oi.getMarket().equals(selectedMarket))) {

                        revenuePerOrderOfP += oi.getSalesPrice();
                        //temp.add(p);

                    }

                }

            }
            personRevenue.put(p.getPersonName(), revenuePerOrderOfP);
            revenuePerOrderOfP = 0;
            System.out.println(revenuePerOrderOfP);
            revenueOfPerson.add(revenuePerOrderOfP);

        }

        for (Person marketPerson : business.getEmployeeDirectory().getPersonList()) {
            Object row[] = new Object[5];
            row[0] = marketPerson.getPersonrId();
            row[1] = marketPerson.getPersonName();
            row[2] = marketPerson.getMyCommision();
            row[3] = personRevenue.get(marketPerson.getPersonName());
            row[4] = marketPerson.getBelowTargetSales();
            dtm.addRow(row);

        }


    }//GEN-LAST:event_btnTopSalesPMarketActionPerformed

    private void btnSalesPersonAboveTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesPersonAboveTActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblSalesPersons.getModel();
        dtm.setRowCount(0);
        for (Person p : business.getEmployeeDirectory().getPersonList()) {
            if (p.getBelowTargetSales() == 0) {

                Object row[] = new Object[3];
                row[0] = p.getPersonrId();
                row[1] = p.getPersonName();
                row[2] = p.getMyCommision();
                //row[3] = p.get(marketPerson.getPersonName());
                //row[4] = p.getBelowTargetSales();
                dtm.addRow(row);
            }

        }
        if (dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No sales persons that are selling above target");
        }

    }//GEN-LAST:event_btnSalesPersonAboveTActionPerformed

    private void btnSalesPersonBelowTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesPersonBelowTActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblSalesPersons.getModel();
        dtm.setRowCount(0);
        for (Person p : business.getEmployeeDirectory().getPersonList()) {
            if (p.getBelowTargetSales() > 0) {

                Object row[] = new Object[3];
                row[0] = p.getPersonrId();
                row[1] = p.getPersonName();
                row[2] = p.getMyCommision();
                //row[3] = p.get(marketPerson.getPersonName());
                //row[4] = p.getBelowTargetSales();
                dtm.addRow(row);
            }

        }
        if (dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "No sales persons that are selling above target");
        }


    }//GEN-LAST:event_btnSalesPersonBelowTActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalesPersonAboveT;
    private javax.swing.JButton btnSalesPersonBelowT;
    private javax.swing.JButton btnTopSalesPMarket;
    private javax.swing.JComboBox comboBoxMarket;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSalesPersons;
    // End of variables declaration//GEN-END:variables
}
