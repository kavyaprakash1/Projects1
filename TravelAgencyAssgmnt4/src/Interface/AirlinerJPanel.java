/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Airliner;
import Business.Flight;
import Business.FlightSchedule;
import Business.MasterTravelScheduler;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kavyaprakash
 */
public class AirlinerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AirlinerJPanel
     */
    JPanel userProcessContainer;
    FlightSchedule flightSchedule;

    AirlinerJPanel(JPanel userProcessContainer, FlightSchedule flightSchedule) {
        //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.flightSchedule = flightSchedule;
        populateAirlinersTbl();
       
        //populateFlightsTable();
    }

    public void populateFlightsTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblAirlinerFlights.getModel();
        dtm.setRowCount(0);

        for (Flight flt : flightSchedule.getFlightListAirIndia()) {
            Object row[] = new Object[6];
            row[0] = flt;
            row[1] = flt.getDeparture();
            row[2] = flt.getDestination();
            row[3] = flt.getDate();
            row[4] = flt.getTimeOfDay();
            // Count the number of seats in the particular flight which has seats assigned attribute as false

            dtm.addRow(row);

        }

    }
    
     public void populateFlightsTable(String airlinerName) {
        DefaultTableModel dtm = (DefaultTableModel) tblAirlinerFlights.getModel();
        dtm.setRowCount(0);
        ArrayList<Flight> flights ;
        if(airlinerName.equalsIgnoreCase("airindia")){
            flights = flightSchedule.getFlightListAirIndia();
        }else
            flights = flightSchedule.getFlightListLuftansa();
        for (Flight flt : flights) {
            Object row[] = new Object[6];
            row[0] = flt;
            row[1] = flt.getDeparture();
            row[2] = flt.getDestination();
            row[3] = flt.getDate();
            row[4] = flt.getTimeOfDay();
            // Count the number of seats in the particular flight which has seats assigned attribute as false

            dtm.addRow(row);

        }

    }

    public void populateAirlinersTbl() {
        DefaultTableModel dtml = (DefaultTableModel) tableAirlinersAirlinerJP.getModel();
        Object row[] = new Object[1];
        Object row1[] = new Object[1];

        row[0] = "AirIndia";
        row1[0] = "Luftansa";
        dtml.addRow(row);
        dtml.addRow(row1);

    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAirlinerFlights = new javax.swing.JTable();
        btnAirlinerDeleteFlight = new javax.swing.JButton();
        btnAirlinerAddFlight = new javax.swing.JButton();
        btnViewFlightAirliner = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAirlinersAirlinerJP = new javax.swing.JTable();
        btnListFlights = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(600, 400));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("AIRLINER");

        tblAirlinerFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SerialNo", "Departure", "Destination", "Date", "TimeOfDay"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAirlinerFlights);
        if (tblAirlinerFlights.getColumnModel().getColumnCount() > 0) {
            tblAirlinerFlights.getColumnModel().getColumn(0).setResizable(false);
            tblAirlinerFlights.getColumnModel().getColumn(1).setResizable(false);
            tblAirlinerFlights.getColumnModel().getColumn(2).setResizable(false);
            tblAirlinerFlights.getColumnModel().getColumn(3).setResizable(false);
            tblAirlinerFlights.getColumnModel().getColumn(4).setResizable(false);
        }

        btnAirlinerDeleteFlight.setText("DELETE FLIGHT");
        btnAirlinerDeleteFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAirlinerDeleteFlightActionPerformed(evt);
            }
        });

        btnAirlinerAddFlight.setText("ADD FLIGHT");
        btnAirlinerAddFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAirlinerAddFlightActionPerformed(evt);
            }
        });

        btnViewFlightAirliner.setText("VIEW FLIGHT");
        btnViewFlightAirliner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFlightAirlinerActionPerformed(evt);
            }
        });

        tableAirlinersAirlinerJP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliners"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableAirlinersAirlinerJP);
        if (tableAirlinersAirlinerJP.getColumnModel().getColumnCount() > 0) {
            tableAirlinersAirlinerJP.getColumnModel().getColumn(0).setResizable(false);
        }

        btnListFlights.setText("List Flights ");
        btnListFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListFlightsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(260, 260, 260)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(431, 431, 431)
                                .addComponent(btnViewFlightAirliner)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(151, 151, 151)
                            .addComponent(btnAirlinerAddFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAirlinerDeleteFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnListFlights)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(btnListFlights)
                .addGap(1, 1, 1)
                .addComponent(btnViewFlightAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnAirlinerDeleteFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnAirlinerAddFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(389, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAirlinerDeleteFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAirlinerDeleteFlightActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAirlinerFlights.getSelectedRow();

        if (selectedRow >= 0) {
            Flight flt = (Flight) tblAirlinerFlights.getValueAt(selectedRow, 0);
            flightSchedule.deleteFlight(flt);
            JOptionPane.showMessageDialog(null, " Flight has been deleted");
            populateFlightsTable();
        }
    }//GEN-LAST:event_btnAirlinerDeleteFlightActionPerformed

    private void btnAirlinerAddFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAirlinerAddFlightActionPerformed
        // TODO add your handling code here:
        AddFlightJPanel panel = new AddFlightJPanel(userProcessContainer, flightSchedule,(String)tableAirlinersAirlinerJP.getValueAt(tableAirlinersAirlinerJP.getSelectedRow(),0),this);
        userProcessContainer.add("AddFlightJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAirlinerAddFlightActionPerformed

    private void btnViewFlightAirlinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFlightAirlinerActionPerformed
        // TODO add your handling code here:
        if(tblAirlinerFlights.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null, "Please select a flight row");
            return;
        }
        Flight flight1 = (Flight) tblAirlinerFlights.getValueAt(tblAirlinerFlights.getSelectedRow(), 0);
        ViewFlightJPanel panel = new ViewFlightJPanel(userProcessContainer, flightSchedule, flight1);
        userProcessContainer.add("ViewFlightJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_btnViewFlightAirlinerActionPerformed

    private void btnListFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListFlightsActionPerformed
        // TODO add your handling code here:
        
        if(tableAirlinersAirlinerJP.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null, "Please select an airliner");
            return;
        }
        String selection = (String) tableAirlinersAirlinerJP.getValueAt(tableAirlinersAirlinerJP.getSelectedRow(), 0);
        DefaultTableModel dtm = (DefaultTableModel) tblAirlinerFlights.getModel();
        dtm.setRowCount(0);
        if (selection.equalsIgnoreCase("AirIndia")) {
            for (Flight flt : flightSchedule.getFlightListAirIndia()) {
                Object row[] = new Object[6];
                row[0] = flt;
                row[1] = flt.getDeparture();
                row[2] = flt.getDestination();
                row[3] = flt.getDate();
                row[4] = flt.getTimeOfDay();
                
                dtm.addRow(row);
            }
        }
        if (selection.equalsIgnoreCase("Luftansa")) {
            for (Flight flt : flightSchedule.getFlightListLuftansa()) {
                Object row[] = new Object[6];
                row[0] = flt;
                row[1] = flt.getDeparture();
                row[2] = flt.getDestination();
                row[3] = flt.getDate();
                row[4] = flt.getTimeOfDay();
    
                dtm.addRow(row);
            }
        }

    }//GEN-LAST:event_btnListFlightsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAirlinerAddFlight;
    private javax.swing.JButton btnAirlinerDeleteFlight;
    private javax.swing.JButton btnListFlights;
    private javax.swing.JButton btnViewFlightAirliner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableAirlinersAirlinerJP;
    private javax.swing.JTable tblAirlinerFlights;
    // End of variables declaration//GEN-END:variables
}
